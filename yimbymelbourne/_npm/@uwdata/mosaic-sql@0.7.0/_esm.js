/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@uwdata/mosaic-sql@0.7.0/src/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
class t{constructor(t,e){t&&(this.table=String(t)),e&&(this.column=e)}get columns(){return this.column?[this.column]:[]}toString(){const{table:t,column:n}=this;if(n){const r=n.startsWith("*")?n:`"${n}"`;return`${t?`${e(t)}.`:""}${r}`}return t?e(t):"NULL"}}function e(t){return t.split(".").map((t=>`"${t}"`)).join(".")}function n(t){return"string"==typeof t?i(t):t}function r(t){return"string"==typeof t?s(t):t}function s(e){return new t(e)}function i(e,n){return 1===arguments.length&&(n=e,e=null),new t(e,n)}function o(e){return new t(e,"*")}function u(t){return"string"==typeof t?`"${t}"`:a(t)}function a(t){switch(typeof t){case"boolean":return t?"TRUE":"FALSE";case"string":return`'${t}'`;case"number":return Number.isFinite(t)?String(t):"NULL";default:if(null==t)return"NULL";if(t instanceof Date){const e=+t;if(Number.isNaN(e))return"NULL";const n=t.getUTCFullYear(),r=t.getUTCMonth(),s=t.getUTCDate();return e===Date.UTC(n,r,s)?`MAKE_DATE(${n}, ${r+1}, ${s})`:`EPOCH_MS(${e})`}return t instanceof RegExp?`'${t.source}'`:String(t)}}const c=t=>"function"==typeof t?.addEventListener;function l(t){return t instanceof h}class h{constructor(t,e,n){this._expr=Array.isArray(t)?t:[t],this._deps=e||[],this.annotate(n);const r=this._expr.filter((t=>c(t)));r.length>0?(this._params=Array.from(new Set(r)),this._params.forEach((t=>{t.addEventListener("value",(()=>function(t,e){if(e?.size)return Promise.allSettled(Array.from(e,(e=>e(t))))}(this,this.map?.get("value"))))}))):this.addEventListener=void 0}get value(){return this}get columns(){const{_params:t,_deps:e}=this;if(t){const n=new Set(t.flatMap((t=>{const e=t.value?.columns;return Array.isArray(e)?e:[]})));if(n.size){const t=new Set(e);return n.forEach((e=>t.add(e))),Array.from(t)}}return e}get column(){return this._deps.length?this._deps[0]:this.columns[0]}annotate(...t){return Object.assign(this,...t)}toString(){return this._expr.map((t=>c(t)&&!l(t)?a(t.value):t)).join("")}addEventListener(t,e){const n=this.map||(this.map=new Map);(n.get(t)||(n.set(t,new Set),n.get(t))).add(e)}}function f(t,e){const n=[t[0]],r=new Set,s=e.length;for(let i=0,o=0;i<s;){const s=e[i];c(s)?n[++o]=s:(Array.isArray(s?.columns)&&s.columns.forEach((t=>r.add(t))),n[o]+="string"==typeof s?s:a(s));const u=t[++i];c(n[o])?n[++o]=u:n[o]+=u}return{spans:n,cols:Array.from(r)}}function p(t,...e){const{spans:n,cols:r}=f(t,e);return new h(n,r)}function g(t){const e=n(t);return p`${e} DESC NULLS LAST`.annotate({label:e?.label,desc:!0})}const $=t=>({value:t,toString:()=>a(t)});function E(t){t(this.op,this),this.children?.forEach((e=>e.visit(t)))}function y(t,e){const r=e.filter((t=>null!=t)).map(n),s=r.map(((e,n)=>n?` ${t} `:""));return 1===r.length?s.push(""):r.length>1&&(s[0]="(",s.push(")")),p(s,...r).annotate({op:t,children:r,visit:E})}const m=(...t)=>y("AND",t.flat()),N=(...t)=>y("OR",t.flat()),A=(w="NOT",t=>p`(${w} ${n(t)})`.annotate({op:w,a:t,visit:E}));var w;const S=t=>e=>p`(${n(e)} ${t})`.annotate({op:t,a:e,visit:E}),d=S("IS NULL"),R=S("IS NOT NULL"),b=t=>(e,r)=>p`(${n(e)} ${t} ${n(r)})`.annotate({op:t,a:e,b:r,visit:E}),T=b("="),I=b("<>"),O=b("<"),q=b(">"),L=b("<="),M=b(">="),_=b("IS DISTINCT FROM"),D=b("IS NOT DISTINCT FROM");function v(t,e,r,s){e=n(e);const i=t.startsWith("NOT ")?"NOT ":"";return(r?s?p`${i}(${r[0]} <= ${e} AND ${e} < ${r[1]})`:p`(${e} ${t} ${r[0]} AND ${r[1]})`:p``).annotate({op:t,visit:E,field:e,range:r})}const G=(t,e,n)=>v("BETWEEN",t,e,n),C=(t,e,n)=>v("NOT BETWEEN",t,e,n);function U(t,e){return Array.from({length:t},(()=>e))}function F(t,e){return(...r)=>{const s=r.map(n),i=e?`::${e}`:"";return(s.length?p([`${t}(`,...U(s.length-1,", "),`)${i}`],...s):p`${t}()${i}`).annotate({func:t,args:s})}}const j=F("REGEXP_MATCHES"),P=F("CONTAINS"),W=F("PREFIX"),x=F("SUFFIX"),B=F("LOWER"),V=F("UPPER"),Y=F("LENGTH"),X=F("ISNAN"),H=F("ISFINITE"),K=F("ISINF");class z extends h{constructor(t,e,n,r,s="",i="",o=""){let u;if(r&&!(s||i||o))u=r?p`${e} OVER "${r}"`:p`${e} OVER ()`;else{u=p`${e} OVER (${r?`"${r}" `:""}${s}${s&&i?" ":""}${i}${(s||i)&&o?" ":""}${o})`}n&&(u=p`(${u})::${n}`);const{_expr:a,_deps:c}=u;super(a,c,{window:t,func:e,type:n,name:r,group:s,order:i,frame:o})}get basis(){return this.column}get label(){const{func:t}=this;return t.label??t.toString()}over(t){const{window:e,func:n,type:r,group:s,order:i,frame:o}=this;return new z(e,n,r,t,s,i,o)}partitionby(...t){const e=t.flat().filter((t=>t)).map(n),r=p(["PARTITION BY ",U(e.length-1,", "),""],...e),{window:s,func:i,type:o,name:u,order:a,frame:c}=this;return new z(s,i,o,u,r,a,c)}orderby(...t){const e=t.flat().filter((t=>t)).map(n),r=p(["ORDER BY ",U(e.length-1,", "),""],...e),{window:s,func:i,type:o,name:u,group:a,frame:c}=this;return new z(s,i,o,u,a,r,c)}rows(t){const e=Q("ROWS",t),{window:n,func:r,type:s,name:i,group:o,order:u}=this;return new z(n,r,s,i,o,u,e)}range(t){const e=Q("RANGE",t),{window:n,func:r,type:s,name:i,group:o,order:u}=this;return new z(n,r,s,i,o,u,e)}}function Q(t,e){if(c(e)){const n=p`${e}`;return n.toString=()=>`${t} ${k(e.value)}`,n}return`${t} ${k(e)}`}function k(t){const[e,n]=t;return`BETWEEN ${0===e?"CURRENT ROW":Number.isFinite(e)?`${Math.abs(e)} PRECEDING`:"UNBOUNDED PRECEDING"} AND ${0===n?"CURRENT ROW":Number.isFinite(n)?`${Math.abs(n)} FOLLOWING`:"UNBOUNDED FOLLOWING"}`}function J(t,e){return(...n)=>{const r=F(t)(...n);return new z(t,r,e)}}const Z=J("ROW_NUMBER","INTEGER"),tt=J("RANK","INTEGER"),et=J("DENSE_RANK","INTEGER"),nt=J("PERCENT_RANK"),rt=J("CUME_DIST"),st=J("NTILE"),it=J("LAG"),ot=J("LEAD"),ut=J("FIRST_VALUE"),at=J("LAST_VALUE"),ct=J("NTH_VALUE");function lt(t,...e){return p(t,...e).annotate({aggregate:!0})}class ht extends h{constructor(t,e,r,s,i){e=(e||[]).map(n);const{strings:o,exprs:u}=function(t,e,n,r,s){const i=")"+(n?`::${n}`:"");let o=[`${t}(${r?"DISTINCT ":""}`],u=[];e.length?(o=o.concat([...U(e.length-1,", "),`${i}${s?" FILTER (WHERE ":""}`,...s?[")"]:[]]),u=[...e,...s?[s]:[]]):o[0]+="*"+i;return{exprs:u,strings:o}}(t,e,r,s,i),{spans:a,cols:c}=f(o,u);super(a,c,{aggregate:t,args:e,type:r,isDistinct:s,filter:i})}get basis(){return this.column}get label(){const{aggregate:t,args:e,isDistinct:n}=this,r=n?"DISTINCT"+(e.length?" ":""):"",s=e.length?`(${r}${e.map(ft).join(", ")})`:"";return`${t.toLowerCase()}${s}`}distinct(){const{aggregate:t,args:e,type:n,filter:r}=this;return new ht(t,e,n,!0,r)}where(t){const{aggregate:e,args:n,type:r,isDistinct:s}=this;return new ht(e,n,r,s,t)}window(){const{aggregate:t,args:e,type:n,isDistinct:r}=this,s=new ht(t,e,null,r);return new z(t,s,n)}partitionby(...t){return this.window().partitionby(...t)}orderby(...t){return this.window().orderby(...t)}rows(t,e){return this.window().rows(t,e)}range(t,e){return this.window().range(t,e)}}function ft(t){const e=a(t);return e&&e.startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e}function pt(t,e){return(...n)=>new ht(t,n,e)}const gt=pt("COUNT","INTEGER"),$t=pt("AVG"),Et=pt("AVG"),yt=pt("MAD"),mt=pt("MAX"),Nt=pt("MIN"),At=pt("SUM","DOUBLE"),wt=pt("PRODUCT"),St=pt("MEDIAN"),dt=pt("QUANTILE"),Rt=pt("MODE"),bt=pt("VARIANCE"),Tt=pt("STDDEV"),It=pt("SKEWNESS"),Ot=pt("KURTOSIS"),qt=pt("ENTROPY"),Lt=pt("VAR_POP"),Mt=pt("STDDEV_POP"),_t=pt("CORR"),Dt=pt("COVAR_POP"),vt=pt("REGR_INTERCEPT"),Gt=pt("REGR_SLOPE"),Ct=pt("REGR_COUNT"),Ut=pt("REGR_R2"),Ft=pt("REGR_SYY"),jt=pt("REGR_SXX"),Pt=pt("REGR_SXY"),Wt=pt("REGR_AVGX"),xt=pt("REGR_AVGY"),Bt=pt("FIRST"),Vt=pt("LAST"),Yt=pt("ARG_MIN"),Xt=pt("ARG_MAX"),Ht=pt("STRING_AGG"),Kt=pt("ARRAY_AGG");function zt(t,e){const r=p`CAST(${n(t)} AS ${e})`;return Object.defineProperty(r,"label",{enumerable:!0,get:()=>t.label}),Object.defineProperty(r,"aggregate",{enumerable:!0,get:()=>t.aggregate||!1}),r}const Qt=t=>zt(t,"DOUBLE"),kt=t=>zt(t,"INTEGER"),Jt=t=>p`epoch_ms(${n(t)})`,Zt=t=>p`MAKE_DATE(2012, MONTH(${n(t)}), 1)`.annotate({label:"month"}),te=t=>{const e=n(t);return p`MAKE_DATE(2012, MONTH(${e}), DAY(${e}))`.annotate({label:"date"})},ee=t=>p`MAKE_DATE(2012, 1, DAY(${n(t)}))`.annotate({label:"date"}),ne=F("ST_AsGeoJSON"),re=F("ST_X"),se=F("ST_Y"),ie=F("ST_CENTROID"),oe=t=>re(ie(t)),ue=t=>se(ie(t));class ae{static select(...t){return(new ae).select(...t)}static from(...t){return(new ae).from(...t)}static with(...t){return(new ae).with(...t)}static union(...t){return new ce("UNION",t.flat())}static unionAll(...t){return new ce("UNION ALL",t.flat())}static intersect(...t){return new ce("INTERSECT",t.flat())}static except(...t){return new ce("EXCEPT",t.flat())}static describe(t){const e=t.clone(),{clone:n,toString:r}=e;return Object.assign(e,{describe:!0,clone:()=>ae.describe(n.call(e)),toString:()=>`DESCRIBE ${r.call(e)}`})}constructor(){this.query={with:[],select:[],from:[],where:[],groupby:[],having:[],window:[],qualify:[],orderby:[]}}clone(){const t=new ae;return t.query={...this.query},t}with(...t){const{query:e}=this;if(0===t.length)return e.with;{const n=[],r=(t,e)=>{const r=e.clone();r.cteFor=this,n.push({as:t,query:r})};return t.flat().forEach((t=>{if(null==t);else if(t.as&&t.query)r(t.as,t.query);else for(const e in t)r(e,t[e])})),e.with=e.with.concat(n),this}}select(...e){const{query:r}=this;if(0===e.length)return r.select;{const s=[];for(const r of e.flat())if(null==r);else if("string"==typeof r)s.push({as:r,expr:n(r)});else if(r instanceof t)s.push({as:r.column,expr:r});else if(Array.isArray(r))s.push({as:r[0],expr:r[1]});else for(const t in r)s.push({as:fe(t),expr:n(r[t])});return r.select=r.select.concat(s),this}}$select(...t){return this.query.select=[],this.select(...t)}distinct(t=!0){return this.query.distinct=!!t,this}from(...e){const{query:n}=this;if(0===e.length)return n.from;{const s=[];return e.flat().forEach((e=>{if(null==e);else if("string"==typeof e)s.push({as:e,from:r(e)});else if(e instanceof t)s.push({as:e.table,from:e});else if(le(e)||l(e))s.push({from:e});else if(Array.isArray(e))s.push({as:fe(e[0]),from:r(e[1])});else for(const t in e)s.push({as:fe(t),from:r(e[t])})})),n.from=n.from.concat(s),this}}$from(...t){return this.query.from=[],this.from(...t)}sample(t,e){const{query:n}=this;if(0===arguments.length)return n.sample;{let r=t;return"number"==typeof t&&(r=t>0&&t<1?{perc:100*t,method:e}:{rows:Math.round(t),method:e}),n.sample=r,this}}where(...t){const{query:e}=this;return 0===t.length?e.where:(e.where=e.where.concat(t.flat().filter((t=>t))),this)}$where(...t){return this.query.where=[],this.where(...t)}groupby(...t){const{query:e}=this;return 0===t.length?e.groupby:(e.groupby=e.groupby.concat(t.flat().filter((t=>t)).map(n)),this)}$groupby(...t){return this.query.groupby=[],this.groupby(...t)}having(...t){const{query:e}=this;return 0===t.length?e.having:(e.having=e.having.concat(t.flat().filter((t=>t))),this)}window(...t){const{query:e}=this;if(0===t.length)return e.window;{const n=[];return t.flat().forEach((t=>{if(null==t);else for(const e in t)n.push({as:fe(e),expr:t[e]})})),e.window=e.window.concat(n),this}}qualify(...t){const{query:e}=this;return 0===t.length?e.qualify:(e.qualify=e.qualify.concat(t.flat().filter((t=>t))),this)}orderby(...t){const{query:e}=this;return 0===t.length?e.orderby:(e.orderby=e.orderby.concat(t.flat().filter((t=>t)).map(n)),this)}limit(t){const{query:e}=this;return 0===arguments.length?e.limit:(e.limit=Number.isFinite(t)?t:void 0,this)}offset(t){const{query:e}=this;return 0===arguments.length?e.offset:(e.offset=Number.isFinite(t)?t:void 0,this)}get subqueries(){const{query:t,cteFor:e}=this,n=(e?.query||t).with,r=n?.reduce(((t,{as:e,query:n})=>(t[e]=n,t)),{}),s=[];return t.from.forEach((({from:t})=>{if(le(t))s.push(t);else if(r[t.table]){const e=r[t.table];s.push(e)}})),s}toString(){const{with:e,select:n,distinct:r,from:s,sample:i,where:o,groupby:u,having:a,window:c,qualify:l,orderby:h,limit:f,offset:p}=this.query,g=[];if(e.length){const t=e.map((({as:t,query:e})=>`"${t}" AS (${e})`));g.push(`WITH ${t.join(", ")}`)}const $=n.map((({as:e,expr:n})=>{return s=e,(r=n)instanceof t&&r.column===s&&!n.table?`${n}`:`${n} AS "${e}"`;var r,s}));if(g.push(`SELECT${r?" DISTINCT":""} ${$.join(", ")}`),s.length){const t=s.map((({as:t,from:e})=>{const n=le(e)?`(${e})`:`${e}`;return t&&t!==e.table?`${n} AS "${t}"`:n}));g.push(`FROM ${t.join(", ")}`)}if(o.length){const t=o.map(String).filter((t=>t)).join(" AND ");t&&g.push(`WHERE ${t}`)}if(i){const{rows:t,perc:e,method:n,seed:r}=i,s=t?`${t} ROWS`:`${e} PERCENT`,o=n?` (${n}${null!=r?`, ${r}`:""})`:"";g.push(`USING SAMPLE ${s}${o}`)}if(u.length&&g.push(`GROUP BY ${u.join(", ")}`),a.length){const t=a.map(String).filter((t=>t)).join(" AND ");t&&g.push(`HAVING ${t}`)}if(c.length){const t=c.map((({as:t,expr:e})=>`"${t}" AS (${e})`));g.push(`WINDOW ${t.join(", ")}`)}if(l.length){const t=l.map(String).filter((t=>t)).join(" AND ");t&&g.push(`QUALIFY ${t}`)}return h.length&&g.push(`ORDER BY ${h.join(", ")}`),Number.isFinite(f)&&g.push(`LIMIT ${f}`),Number.isFinite(p)&&g.push(`OFFSET ${p}`),g.join(" ")}}class ce{constructor(t,e){this.op=t,this.queries=e.map((t=>t.clone())),this.query={orderby:[]}}clone(){const t=new ce(this.op,this.queries);return t.query={...this.query},t}orderby(...t){const{query:e}=this;return 0===t.length?e.orderby:(e.orderby=e.orderby.concat(t.flat().filter((t=>t)).map(n)),this)}limit(t){const{query:e}=this;return 0===arguments.length?e.limit:(e.limit=Number.isFinite(t)?t:void 0,this)}offset(t){const{query:e}=this;return 0===arguments.length?e.offset:(e.offset=Number.isFinite(t)?t:void 0,this)}get subqueries(){const{queries:t,cteFor:e}=this;return e&&t.forEach((t=>t.cteFor=e)),t}toString(){const{op:t,queries:e,query:{orderby:n,limit:r,offset:s}}=this,i=[e.join(` ${t} `)];return n.length&&i.push(`ORDER BY ${n.join(", ")}`),Number.isFinite(r)&&i.push(`LIMIT ${r}`),Number.isFinite(s)&&i.push(`OFFSET ${s}`),i.join(" ")}}function le(t){return t instanceof ae||t instanceof ce}function he(t){return le(t)&&t.describe}function fe(t){return function(t){return'"'===t[0]&&'"'===t[t.length-1]}(t)?t.slice(1,-1):t}const pe=t=>t;function ge(){return{apply:t=>+t,invert:t=>new Date(t),sqlApply:t=>t instanceof Date?+t:Jt(n(t)),sqlInvert:pe}}const $e={linear:function(){return{apply:pe,invert:pe,sqlApply:n,sqlInvert:pe}},log:function({base:t}={}){if(null==t||t===Math.E)return{apply:Math.log,invert:Math.exp,sqlApply:t=>p`LN(${n(t)})`,sqlInvert:t=>p`EXP(${t})`};if(10===t)return{apply:Math.log10,invert:t=>Math.pow(10,t),sqlApply:t=>p`LOG(${n(t)})`,sqlInvert:t=>p`POW(10, ${t})`};{const e=+t;return{apply:t=>Math.log(t)/Math.log(e),invert:t=>Math.pow(e,t),sqlApply:t=>p`LN(${n(t)}) / LN(${e})`,sqlInvert:t=>p`POW(${e}, ${t})`}}},symlog:function({constant:t=1}={}){const e=+t;return{apply:t=>Math.sign(t)*Math.log1p(Math.abs(t)),invert:t=>Math.sign(t)*Math.exp(Math.abs(t)-e),sqlApply:t=>p`SIGN(${t=n(t)}) * LN(${e} + ABS(${t}))`,sqlInvert:t=>p`SIGN(${t}) * (EXP(ABS(${t})) - ${e})`}},sqrt:function(){return{apply:t=>Math.sign(t)*Math.sqrt(Math.abs(t)),invert:t=>Math.sign(t)*t*t,sqlApply:t=>p`SIGN(${t=n(t)}) * SQRT(ABS(${t}))`,sqlInvert:t=>p`SIGN(${t}) * (${t}) ** 2`}},pow:function({exponent:t=1}={}){const e=+t;return{apply:t=>Math.sign(t)*Math.pow(Math.abs(t),e),invert:t=>Math.sign(t)*Math.pow(Math.abs(t),1/e),sqlApply:t=>p`SIGN(${t=n(t)}) * POW(ABS(${t}), ${e})`,sqlInvert:t=>p`SIGN(${t}) * POW(ABS(${t}), 1/${e})`}},time:ge,utc:ge};function Ee(t){const e=$e[t.type];return e?{...t,...e(t)}:null}function ye(t,e,{replace:n=!1,temp:r=!0,view:s=!1}={}){return"CREATE"+(n?" OR REPLACE ":" ")+(r?"TEMP ":"")+(s?"VIEW":"TABLE")+(n?" ":" IF NOT EXISTS ")+t+" AS "+e}function me(t){return`INSTALL ${t}; LOAD ${t}`}function Ne(t,e,n,r={},s={}){const{select:i=["*"],where:o,view:u,temp:a,replace:c,...l}=r,h=function(t){return Object.entries(t).map((([t,e])=>`${t}=${be(e)}`)).join(", ")}({...s,...l}),f=`${t}('${n}'${h?", "+h:""})`,p=o?` WHERE ${o}`:"";return ye(e,`SELECT ${i.join(", ")} FROM ${f}${p}`,{view:u,temp:a,replace:c})}function Ae(t,e,n){return Ne("read_csv",t,e,n,{auto_detect:!0,sample_size:-1})}function we(t,e,n){return Ne("read_json",t,e,n,{auto_detect:!0,json_format:"auto"})}function Se(t,e,n){return Ne("read_parquet",t,e,n)}function de(t,e,n={}){const{options:r,...s}=n;if(r){const t=Array.isArray(r)?r.join(", "):"string"==typeof r?r:Object.entries(r).map((([t,e])=>`${t}=${e}`)).join(", ");s.open_options=t.toUpperCase()}return Ne("st_read",t,e,s)}function Re(t,e,n={}){const{select:r=["*"],...s}=n,i=function(t,{columns:e=Object.keys(t?.[0]||{})}={}){let n=[];if(Array.isArray(e)?(n=e,e=n.reduce(((t,e)=>(t[e]=e,t)),{})):e&&(n=Object.keys(e)),!n.length)throw new Error("Can not create table from empty column set.");const r=[];for(const s of t){const t=n.map((t=>`${a(s[t])} AS "${e[t]}"`));r.push(`(SELECT ${t.join(", ")})`)}return r.join(" UNION ALL ")}(e);return ye(t,1===r.length&&"*"===r[0]?i:`SELECT ${r} FROM ${i}`,s)}function be(t){switch(typeof t){case"boolean":return String(t);case"string":return`'${t}'`;case"undefined":case"object":return null==t?"NULL":Array.isArray(t)?"["+t.map((t=>be(t))).join(", ")+"]":"{"+Object.entries(t).map((([t,e])=>`'${t}': ${be(e)}`)).join(", ")+"}";default:return t}}export{ae as Query,t as Ref,lt as agg,o as all,m as and,Xt as argmax,Yt as argmin,Kt as arrayAgg,n as asColumn,r as asRelation,$t as avg,zt as cast,Qt as castDouble,kt as castInteger,ie as centroid,oe as centroidX,ue as centroidY,i as column,P as contains,_t as corr,gt as count,Dt as covarPop,ye as create,rt as cume_dist,ee as dateDay,Zt as dateMonth,te as dateMonthDay,et as dense_rank,g as desc,qt as entropy,Jt as epoch_ms,T as eq,Bt as first,ut as first_value,ne as geojson,q as gt,M as gte,G as isBetween,he as isDescribeQuery,_ as isDistinct,H as isFinite,K as isInfinite,X as isNaN,C as isNotBetween,D as isNotDistinct,R as isNotNull,d as isNull,c as isParamLike,le as isQuery,l as isSQLExpression,Ot as kurtosis,it as lag,Vt as last,at as last_value,ot as lead,Y as length,$ as literal,a as literalToSQL,Ae as loadCSV,me as loadExtension,we as loadJSON,Re as loadObjects,Se as loadParquet,de as loadSpatial,B as lower,O as lt,L as lte,yt as mad,mt as max,Et as mean,St as median,Nt as min,Rt as mode,I as neq,A as not,ct as nth_value,st as ntile,N as or,nt as percent_rank,W as prefix,wt as product,dt as quantile,tt as rank,j as regexp_matches,Wt as regrAvgX,xt as regrAvgY,Ct as regrCount,vt as regrIntercept,Ut as regrR2,jt as regrSXX,Pt as regrSXY,Ft as regrSYY,Gt as regrSlope,s as relation,Z as row_number,Ee as scaleTransform,It as skewness,p as sql,Tt as stddev,Mt as stddevPop,Ht as stringAgg,x as suffix,At as sum,u as toSQL,V as upper,Lt as varPop,bt as variance,re as x,se as y};export default null;
